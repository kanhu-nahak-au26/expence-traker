{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"; //Login action\n\nexport const loginUserAction = createAsyncThunk(\"user/login\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    //make http call here\n    const {\n      data\n    } = await axios.post(\"http://localhost:5000/api/users/login\", payload, config);\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}); //register action\n\nexport const registerUserAction = createAsyncThunk(\"user/register\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    //make http call here\n    const {\n      data\n    } = await axios.post(\"http://localhost:5000/api/users/register\", payload, config);\n    return data;\n  } catch (error) {\n    var _error$response2;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n}); //slices\n\nconst usersSlices = createSlice({\n  name: \"users\",\n  initialState: {},\n  extraReducers: builder => {\n    //   Handle pending state\n    builder.addCase(loginUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle success state\n\n    builder.addCase(loginUserAction.fulfilled, (state, action) => {\n      state.userAuth = action === null || action === void 0 ? void 0 : action.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle rejected state\n\n    builder.addCase(loginUserAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n\n      state.userLoading = false;\n      state.userAppErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message;\n      state.userServerErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.message;\n    });\n  }\n});\nexport default usersSlices.reducer;","map":{"version":3,"sources":["/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker/client/src/redux/slices/users/usersSlices.js"],"names":["createAsyncThunk","createSlice","axios","loginUserAction","payload","rejectWithValue","getState","dispatch","config","headers","data","post","error","response","registerUserAction","usersSlices","name","initialState","extraReducers","builder","addCase","pending","state","action","userLoading","userAppErr","undefined","userServerErr","fulfilled","userAuth","rejected","message","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n//Login action\nexport const loginUserAction = createAsyncThunk(\n  \"user/login\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      //make http call here\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/users/login\",\n        payload,\n        config\n      );\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//register action\nexport const registerUserAction = createAsyncThunk(\n  \"user/register\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      //make http call here\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/users/register\",\n        payload,\n        config\n      );\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//slices\n\nconst usersSlices = createSlice({\n  name: \"users\",\n  initialState: {},\n  extraReducers: builder => {\n    //   Handle pending state\n    builder.addCase(loginUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    });\n    //handle success state\n    builder.addCase(loginUserAction.fulfilled, (state, action) => {\n      state.userAuth = action?.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    });\n    //handle rejected state\n    builder.addCase(loginUserAction.rejected, (state, action) => {\n      state.userLoading = false;\n      state.userAppErr = action?.payload?.message;\n      state.userServerErr = action?.error?.message;\n    });\n  },\n});\n\nexport default usersSlices.reducer;\n"]},"metadata":{},"sourceType":"module"}