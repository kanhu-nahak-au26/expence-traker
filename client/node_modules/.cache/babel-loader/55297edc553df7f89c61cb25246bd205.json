{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\"; //Login action\n\nexport const loginUserAction = createAsyncThunk(\"user/login\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    //make http call here\n    const {\n      data\n    } = await axios.post(`${baseURL}/users/login`, payload, config); //Save user into localstorage\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}); //Logout action\n\nexport const logout = createAsyncThunk(\"user/logout\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  try {\n    //Save user into localstorage\n    localStorage.removeItem(\"userInfo\");\n  } catch (error) {\n    var _error$response2;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n}); //register action\n\nexport const registerUserAction = createAsyncThunk(\"user/register\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    //make http call here\n    const {\n      data\n    } = await axios.post(`${baseURL}/users/register`, payload, config);\n    return data;\n  } catch (error) {\n    var _error$response3;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n  }\n}); //profile\n\nexport const userProfileAction = createAsyncThunk(\"user/profile\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  var _getState, _getState$users, _getState$users$userA;\n\n  //get user token from store\n  const userToken = (_getState = getState()) === null || _getState === void 0 ? void 0 : (_getState$users = _getState.users) === null || _getState$users === void 0 ? void 0 : (_getState$users$userA = _getState$users.userAuth) === null || _getState$users$userA === void 0 ? void 0 : _getState$users$userA.token;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${userToken}`\n    }\n  };\n\n  try {\n    //make http call here\n    const {\n      data\n    } = await axios.get(`${baseURL}/users/profile`, config);\n    return data;\n  } catch (error) {\n    var _error$response4;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n  }\n}); //update\n\nexport const updateProfileAction = createAsyncThunk(\"user/update\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  var _getState2, _getState2$users, _getState2$users$user;\n\n  //get user token from store\n  const userToken = (_getState2 = getState()) === null || _getState2 === void 0 ? void 0 : (_getState2$users = _getState2.users) === null || _getState2$users === void 0 ? void 0 : (_getState2$users$user = _getState2$users.userAuth) === null || _getState2$users$user === void 0 ? void 0 : _getState2$users$user.token;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${userToken}`\n    }\n  };\n\n  try {\n    //make http call here\n    const {\n      data\n    } = await axios.put(`${baseURL}/users/update`, {\n      firstname: payload === null || payload === void 0 ? void 0 : payload.firstname,\n      lastname: payload === null || payload === void 0 ? void 0 : payload.lastname,\n      email: payload === null || payload === void 0 ? void 0 : payload.email\n    }, config);\n    return data;\n  } catch (error) {\n    var _error$response5;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n  }\n}); //slices\n//Get user from local storage and place it inside our store;\n\nconst userLoginFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : undefined;\nconst usersSlices = createSlice({\n  name: \"users\",\n  initialState: {\n    userAuth: userLoginFromStorage\n  },\n  extraReducers: builder => {\n    //   Login action\n    builder.addCase(loginUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle success state\n\n    builder.addCase(loginUserAction.fulfilled, (state, action) => {\n      state.userAuth = action === null || action === void 0 ? void 0 : action.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle rejected state\n\n    builder.addCase(loginUserAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n\n      console.log(action);\n      state.userLoading = false;\n      state.userAppErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.msg;\n      state.userServerErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.msg;\n    }); //   Register\n\n    builder.addCase(registerUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle success state\n\n    builder.addCase(registerUserAction.fulfilled, (state, action) => {\n      state.userAuth = action === null || action === void 0 ? void 0 : action.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle rejected state\n\n    builder.addCase(registerUserAction.rejected, (state, action) => {\n      var _action$payload2, _action$error2;\n\n      state.userLoading = false;\n      state.userAppErr = action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.msg;\n      state.userServerErr = action === null || action === void 0 ? void 0 : (_action$error2 = action.error) === null || _action$error2 === void 0 ? void 0 : _action$error2.msg;\n    }); // Logout\n\n    builder.addCase(logout.fulfilled, (state, action) => {\n      state.userAuth = undefined;\n      state.userLoading = false;\n    }); //Profile\n\n    builder.addCase(userProfileAction.pending, (state, action) => {\n      state.loading = true;\n      state.AppErr = undefined;\n      state.ServerErr = undefined;\n    }); //handle success state\n\n    builder.addCase(userProfileAction.fulfilled, (state, action) => {\n      state.profile = action === null || action === void 0 ? void 0 : action.payload;\n      state.loading = false;\n      state.AppErr = undefined;\n      state.ServerErr = undefined;\n    }); //handle rejected state\n\n    builder.addCase(userProfileAction.rejected, (state, action) => {\n      var _action$payload3, _action$error3;\n\n      state.loading = false;\n      state.AppErr = action === null || action === void 0 ? void 0 : (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.msg;\n      state.ServerErr = action === null || action === void 0 ? void 0 : (_action$error3 = action.error) === null || _action$error3 === void 0 ? void 0 : _action$error3.msg;\n    }); //update\n\n    builder.addCase(updateProfileAction.pending, (state, action) => {\n      state.loading = true;\n      state.AppErr = undefined;\n      state.ServerErr = undefined;\n    }); //handle success state\n\n    builder.addCase(updateProfileAction.fulfilled, (state, action) => {\n      state.userUpdate = action === null || action === void 0 ? void 0 : action.payload;\n      state.loading = false;\n      state.AppErr = undefined;\n      state.ServerErr = undefined;\n    }); //handle rejected state\n\n    builder.addCase(updateProfileAction.rejected, (state, action) => {\n      var _action$payload4, _action$error4;\n\n      state.loading = false;\n      state.AppErr = action === null || action === void 0 ? void 0 : (_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.msg;\n      state.ServerErr = action === null || action === void 0 ? void 0 : (_action$error4 = action.error) === null || _action$error4 === void 0 ? void 0 : _action$error4.msg;\n    });\n  }\n});\nexport default usersSlices.reducer;","map":{"version":3,"sources":["/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/slices/users/usersSlices.js"],"names":["createAsyncThunk","createSlice","axios","baseURL","loginUserAction","payload","rejectWithValue","getState","dispatch","config","headers","data","post","localStorage","setItem","JSON","stringify","error","response","logout","removeItem","registerUserAction","userProfileAction","userToken","users","userAuth","token","Authorization","get","updateProfileAction","put","firstname","lastname","email","userLoginFromStorage","getItem","parse","undefined","usersSlices","name","initialState","extraReducers","builder","addCase","pending","state","action","userLoading","userAppErr","userServerErr","fulfilled","rejected","console","log","msg","loading","AppErr","ServerErr","profile","userUpdate","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\";\n\n//Login action\nexport const loginUserAction = createAsyncThunk(\n  \"user/login\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      //make http call here\n      const { data } = await axios.post(\n        `${baseURL}/users/login`,\n        payload,\n        config\n      );\n      //Save user into localstorage\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//Logout action\nexport const logout = createAsyncThunk(\n  \"user/logout\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    try {\n      //Save user into localstorage\n      localStorage.removeItem(\"userInfo\");\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//register action\nexport const registerUserAction = createAsyncThunk(\n  \"user/register\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      //make http call here\n      const { data } = await axios.post(\n        `${baseURL}/users/register`,\n        payload,\n        config\n      );\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//profile\nexport const userProfileAction = createAsyncThunk(\n  \"user/profile\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    //get user token from store\n    const userToken = getState()?.users?.userAuth?.token;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userToken}`,\n      },\n    };\n    try {\n      //make http call here\n      const { data } = await axios.get(`${baseURL}/users/profile`, config);\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//update\nexport const updateProfileAction = createAsyncThunk(\n  \"user/update\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    //get user token from store\n    const userToken = getState()?.users?.userAuth?.token;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userToken}`,\n      },\n    };\n    try {\n      //make http call here\n      const { data } = await axios.put(\n        `${baseURL}/users/update`,\n        {\n          firstname: payload?.firstname,\n          lastname: payload?.lastname,\n          email: payload?.email,\n        },\n        config\n      );\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//slices\n//Get user from local storage and place it inside our store;\nconst userLoginFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : undefined;\n\nconst usersSlices = createSlice({\n  name: \"users\",\n  initialState: {\n    userAuth: userLoginFromStorage,\n  },\n  extraReducers: builder => {\n    //   Login action\n    builder.addCase(loginUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    });\n    //handle success state\n    builder.addCase(loginUserAction.fulfilled, (state, action) => {\n      state.userAuth = action?.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    });\n    //handle rejected state\n    builder.addCase(loginUserAction.rejected, (state, action) => {\n      console.log(action);\n      state.userLoading = false;\n      state.userAppErr = action?.payload?.msg;\n      state.userServerErr = action?.error?.msg;\n    });\n    //   Register\n    builder.addCase(registerUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    });\n    //handle success state\n    builder.addCase(registerUserAction.fulfilled, (state, action) => {\n      state.userAuth = action?.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    });\n    //handle rejected state\n    builder.addCase(registerUserAction.rejected, (state, action) => {\n      state.userLoading = false;\n      state.userAppErr = action?.payload?.msg;\n      state.userServerErr = action?.error?.msg;\n    });\n    // Logout\n    builder.addCase(logout.fulfilled, (state, action) => {\n      state.userAuth = undefined;\n      state.userLoading = false;\n    });\n\n    //Profile\n    builder.addCase(userProfileAction.pending, (state, action) => {\n      state.loading = true;\n      state.AppErr = undefined;\n      state.ServerErr = undefined;\n    });\n    //handle success state\n    builder.addCase(userProfileAction.fulfilled, (state, action) => {\n      state.profile = action?.payload;\n      state.loading = false;\n      state.AppErr = undefined;\n      state.ServerErr = undefined;\n    });\n    //handle rejected state\n    builder.addCase(userProfileAction.rejected, (state, action) => {\n      state.loading = false;\n      state.AppErr = action?.payload?.msg;\n      state.ServerErr = action?.error?.msg;\n    });\n\n    //update\n    builder.addCase(updateProfileAction.pending, (state, action) => {\n      state.loading = true;\n      state.AppErr = undefined;\n      state.ServerErr = undefined;\n    });\n    //handle success state\n    builder.addCase(updateProfileAction.fulfilled, (state, action) => {\n      state.userUpdate = action?.payload;\n      state.loading = false;\n      state.AppErr = undefined;\n      state.ServerErr = undefined;\n    });\n    //handle rejected state\n    builder.addCase(updateProfileAction.rejected, (state, action) => {\n      state.loading = false;\n      state.AppErr = action?.payload?.msg;\n      state.ServerErr = action?.error?.msg;\n    });\n  },\n});\n\nexport default usersSlices.reducer;\n"]},"metadata":{},"sourceType":"module"}