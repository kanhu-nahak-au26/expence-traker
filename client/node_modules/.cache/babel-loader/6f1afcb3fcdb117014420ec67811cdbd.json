{"ast":null,"code":"import React,{useEffect}from\"react\";import*as Yup from\"yup\";import{useFormik}from\"formik\";import{useDispatch,useSelector}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{updateProfileAction}from\"../../redux/slices/users/usersSlices\";import LoadingComponent from\"../../components/Loading\";import ErrorDisplayMessage from\"../../components/ErrorDisplayMessage\";import DisabledButton from\"../../components/DisabledButton\";//form validations\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var formSchema=Yup.object({email:Yup.string().required(\"Email is required\"),firstname:Yup.string().required(\"First Name is required\"),lastname:Yup.string().required(\"Last Name is required\")});var UpdateProfile=function UpdateProfile(_ref){var _state$user,_state$user2,_state$user3;var state=_ref.location.state;//history\nvar history=useHistory();//get data from store\nvar user=useSelector(function(state){return state===null||state===void 0?void 0:state.users;});var userAppErr=user.userAppErr,userServerErr=user.userServerErr,userLoading=user.userLoading,isEdited=user.isEdited;//dispatch\nvar dispatch=useDispatch();//formik form\nvar formik=useFormik({enableReinitialize:true,initialValues:{email:state===null||state===void 0?void 0:(_state$user=state.user)===null||_state$user===void 0?void 0:_state$user.email,firstname:state===null||state===void 0?void 0:(_state$user2=state.user)===null||_state$user2===void 0?void 0:_state$user2.firstname,lastname:state===null||state===void 0?void 0:(_state$user3=state.user)===null||_state$user3===void 0?void 0:_state$user3.lastname},onSubmit:function onSubmit(values){dispatch(updateProfileAction(values));},validationSchema:formSchema});//redirect\nuseEffect(function(){if(isEdited)history.push(\"/profile\");},[isEdited,dispatch]);return/*#__PURE__*/_jsx(_Fragment,{children:userAppErr||userServerErr?/*#__PURE__*/_jsxs(ErrorDisplayMessage,{children:[userServerErr,\" \",userAppErr]}):/*#__PURE__*/_jsx(\"section\",{className:\"py-5 bg-success vh-100\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12 col-md-8 col-lg-5 mx-auto\",children:/*#__PURE__*/_jsx(\"div\",{className:\"p-4 shadow-sm rounded bg-white\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:formik.handleSubmit,children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-muted\",children:\"Update Profile\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3 input-group\",children:/*#__PURE__*/_jsx(\"input\",{value:formik.values.firstname,onBlur:formik.handleBlur(\"firstname\"),onChange:formik.handleChange(\"firstname\"),className:\"form-control\",type:\"text\",placeholder:\"Enter firstname\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-danger mb-2\",children:formik.touched.firstname&&formik.errors.firstname}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3 input-group\",children:/*#__PURE__*/_jsx(\"input\",{value:formik.values.lastname,onBlur:formik.handleBlur(\"lastname\"),onChange:formik.handleChange(\"lastname\"),className:\"form-control\",type:\"text\",placeholder:\"Enter lastname\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-danger mb-2\",children:formik.touched.lastname&&formik.errors.lastname}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3 input-group\",children:/*#__PURE__*/_jsx(\"input\",{value:formik.values.email,onBlur:formik.handleBlur(\"email\"),onChange:formik.handleChange(\"email\"),className:\"form-control\",type:\"email\",placeholder:\"Enter email\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-danger mb-2\",children:formik.touched.email&&formik.errors.email}),/*#__PURE__*/_jsx(\"div\",{class:\"btn-group\",role:\"group\",\"aria-label\":\"Basic mixed styles example\",children:userLoading?/*#__PURE__*/_jsx(DisabledButton,{}):/*#__PURE__*/_jsx(\"button\",{type:\"submit\",class:\"btn btn-warning\",children:\"Update\"})})]})})})})})})});};export default UpdateProfile;","map":{"version":3,"sources":["/home/admin1/100_JS_project/expence/client/src/pages/users/UpdateProfile.js"],"names":["React","useEffect","Yup","useFormik","useDispatch","useSelector","useHistory","updateProfileAction","LoadingComponent","ErrorDisplayMessage","DisabledButton","formSchema","object","email","string","required","firstname","lastname","UpdateProfile","state","location","history","user","users","userAppErr","userServerErr","userLoading","isEdited","dispatch","formik","enableReinitialize","initialValues","onSubmit","values","validationSchema","push","handleSubmit","handleBlur","handleChange","touched","errors"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { updateProfileAction } from \"../../redux/slices/users/usersSlices\";\nimport LoadingComponent from \"../../components/Loading\";\nimport ErrorDisplayMessage from \"../../components/ErrorDisplayMessage\";\nimport DisabledButton from \"../../components/DisabledButton\";\n\n//form validations\nconst formSchema = Yup.object({\n  email: Yup.string().required(\"Email is required\"),\n  firstname: Yup.string().required(\"First Name is required\"),\n  lastname: Yup.string().required(\"Last Name is required\"),\n});\n\nconst UpdateProfile = ({ location: { state } }) => {\n  //history\n  const history = useHistory();\n  //get data from store\n  const user = useSelector(state => state?.users);\n  const { userAppErr, userServerErr, userLoading, isEdited } = user;\n\n  //dispatch\n  const dispatch = useDispatch();\n  //formik form\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      email: state?.user?.email,\n      firstname: state?.user?.firstname,\n      lastname: state?.user?.lastname,\n    },\n\n    onSubmit: values => {\n      dispatch(updateProfileAction(values));\n    },\n    validationSchema: formSchema,\n  });\n  //redirect\n  useEffect(() => {\n    if (isEdited) history.push(\"/profile\");\n  }, [isEdited, dispatch]);\n  return (\n    <>\n      {userAppErr || userServerErr ? (\n        <ErrorDisplayMessage>\n          {userServerErr} {userAppErr}\n        </ErrorDisplayMessage>\n      ) : (\n        <section className=\"py-5 bg-success vh-100\">\n          <div className=\"container text-center\">\n            <div className=\"row mb-4\">\n              <div className=\"col-12 col-md-8 col-lg-5 mx-auto\">\n                <div className=\"p-4 shadow-sm rounded bg-white\">\n                  <form onSubmit={formik.handleSubmit}>\n                    <span className=\"text-muted\">Update Profile</span>\n                    {/* <h4 className=\"mb-4 fw-light\">\n                    Hi, {data?.data?.firstname} Do you want to update your\n                    profile\n                  </h4> */}\n\n                    {/* Display income Err */}\n                    {/* {userAppErr || userServerErr ? (\n                    <ErrorDisplayMessage\n                      error={{\n                        userAppErr,\n                        userServerErr,\n                      }}\n                    />\n                  ) : null} */}\n                    <div className=\"mb-3 input-group\">\n                      <input\n                        value={formik.values.firstname}\n                        onBlur={formik.handleBlur(\"firstname\")}\n                        onChange={formik.handleChange(\"firstname\")}\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"Enter firstname\"\n                      />\n                    </div>\n                    {/* Err */}\n                    <div className=\"text-danger mb-2\">\n                      {formik.touched.firstname && formik.errors.firstname}\n                    </div>\n                    <div className=\"mb-3 input-group\">\n                      <input\n                        value={formik.values.lastname}\n                        onBlur={formik.handleBlur(\"lastname\")}\n                        onChange={formik.handleChange(\"lastname\")}\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"Enter lastname\"\n                      />\n                    </div>\n                    {/* Err */}\n                    <div className=\"text-danger mb-2\">\n                      {formik.touched.lastname && formik.errors.lastname}\n                    </div>\n                    <div className=\"mb-3 input-group\">\n                      <input\n                        value={formik.values.email}\n                        onBlur={formik.handleBlur(\"email\")}\n                        onChange={formik.handleChange(\"email\")}\n                        className=\"form-control\"\n                        type=\"email\"\n                        placeholder=\"Enter email\"\n                      />\n                    </div>\n                    {/* Err */}\n                    <div className=\"text-danger mb-2\">\n                      {formik.touched.email && formik.errors.email}\n                    </div>\n\n                    <div\n                      class=\"btn-group\"\n                      role=\"group\"\n                      aria-label=\"Basic mixed styles example\"\n                    >\n                      {userLoading ? (\n                        <DisabledButton />\n                      ) : (\n                        <button type=\"submit\" class=\"btn btn-warning\">\n                          Update\n                        </button>\n                      )}\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default UpdateProfile;\n"]},"metadata":{},"sourceType":"module"}