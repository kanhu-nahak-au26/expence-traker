{"ast":null,"code":"import { createAsyncThunk, createSlice, createAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\"; //Actions for redirect\n\nexport const resetIncCreated = createAction(\"income/created/reset\");\nexport const resetIncUpdate = createAction(\"income/update/reset\"); //Create action\n\nexport const createIncomeAction = createAsyncThunk(\"income/create\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  var _getState, _getState$users, _getState$users$userA;\n\n  //get user token from store\n  const userToken = (_getState = getState()) === null || _getState === void 0 ? void 0 : (_getState$users = _getState.users) === null || _getState$users === void 0 ? void 0 : (_getState$users$userA = _getState$users.userAuth) === null || _getState$users$userA === void 0 ? void 0 : _getState$users$userA.token;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${userToken}`\n    }\n  };\n\n  try {\n    //make http call here\n    const {\n      data\n    } = await axios.post(`${baseURL}/income`, payload, config);\n    dispatch(resetIncCreated());\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}); //fetch all expenses\n\nexport const fetchAllIncomeAction = createAsyncThunk(\"income/fetch-all\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  var _getState2, _getState2$users;\n\n  const user = (_getState2 = getState()) === null || _getState2 === void 0 ? void 0 : (_getState2$users = _getState2.users) === null || _getState2$users === void 0 ? void 0 : _getState2$users.userAuth;\n  const config = {\n    headers: {\n      authorization: `Bearer ${user === null || user === void 0 ? void 0 : user.token}`\n    }\n  };\n\n  try {\n    const {\n      data\n    } = await axios.get(`${baseURL}/income?page=${payload}`, config);\n    return data;\n  } catch (error) {\n    var _error$response2;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n}); //Create action\n\nexport const updateIncomeAction = createAsyncThunk(\"income/update\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  var _getState3, _getState3$users, _getState3$users$user;\n\n  //get user token from store\n  const userToken = (_getState3 = getState()) === null || _getState3 === void 0 ? void 0 : (_getState3$users = _getState3.users) === null || _getState3$users === void 0 ? void 0 : (_getState3$users$user = _getState3$users.userAuth) === null || _getState3$users$user === void 0 ? void 0 : _getState3$users$user.token;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${userToken}`\n    }\n  };\n\n  try {\n    //make http call here\n    const {\n      data\n    } = await axios.put(`${baseURL}/income/${payload === null || payload === void 0 ? void 0 : payload.id}`, payload, config);\n    return data;\n  } catch (error) {\n    var _error$response3;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n  }\n}); //slices\n\nconst incomeSlices = createSlice({\n  name: \"income\",\n  initialState: {},\n  extraReducers: builder => {\n    //   Create Expense\n    builder.addCase(createIncomeAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(createIncomeAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.incomeCreated = action === null || action === void 0 ? void 0 : action.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(createIncomeAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.msg;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.msg;\n    }); //   fetch all Expense\n\n    builder.addCase(fetchAllIncomeAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchAllIncomeAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.incomeList = action === null || action === void 0 ? void 0 : action.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(fetchAllIncomeAction.rejected, (state, action) => {\n      var _action$payload2, _action$error2;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.msg;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error2 = action.error) === null || _action$error2 === void 0 ? void 0 : _action$error2.msg;\n    }); //   update Expense\n\n    builder.addCase(updateIncomeAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(updateIncomeAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.incomeUpdated = action === null || action === void 0 ? void 0 : action.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(updateIncomeAction.rejected, (state, action) => {\n      var _action$payload3, _action$error3;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.msg;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error3 = action.error) === null || _action$error3 === void 0 ? void 0 : _action$error3.msg;\n    });\n  }\n});\nexport default incomeSlices.reducer;","map":{"version":3,"sources":["/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/slices/income/incomeSlices.js"],"names":["createAsyncThunk","createSlice","createAction","axios","baseURL","resetIncCreated","resetIncUpdate","createIncomeAction","payload","rejectWithValue","getState","dispatch","userToken","users","userAuth","token","config","headers","Authorization","data","post","error","response","fetchAllIncomeAction","user","authorization","get","updateIncomeAction","put","id","incomeSlices","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","incomeCreated","appErr","undefined","serverErr","rejected","msg","incomeList","incomeUpdated","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice, createAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\";\n\n//Actions for redirect\nexport const resetIncCreated = createAction(\"income/created/reset\");\nexport const resetIncUpdate = createAction(\"income/update/reset\");\n\n//Create action\nexport const createIncomeAction = createAsyncThunk(\n  \"income/create\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    //get user token from store\n    const userToken = getState()?.users?.userAuth?.token;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userToken}`,\n      },\n    };\n    try {\n      //make http call here\n      const { data } = await axios.post(`${baseURL}/income`, payload, config);\n      dispatch(resetIncCreated());\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//fetch all expenses\nexport const fetchAllIncomeAction = createAsyncThunk(\n  \"income/fetch-all\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    const user = getState()?.users?.userAuth;\n    const config = {\n      headers: {\n        authorization: `Bearer ${user?.token}`,\n      },\n    };\n    try {\n      const { data } = await axios.get(\n        `${baseURL}/income?page=${payload}`,\n        config\n      );\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//Create action\nexport const updateIncomeAction = createAsyncThunk(\n  \"income/update\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    //get user token from store\n    const userToken = getState()?.users?.userAuth?.token;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userToken}`,\n      },\n    };\n    try {\n      //make http call here\n      const { data } = await axios.put(\n        `${baseURL}/income/${payload?.id}`,\n        payload,\n        config\n      );\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n//slices\n\nconst incomeSlices = createSlice({\n  name: \"income\",\n  initialState: {},\n  extraReducers: builder => {\n    //   Create Expense\n    builder.addCase(createIncomeAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    \n    builder.addCase(createIncomeAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.incomeCreated = action?.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(createIncomeAction.rejected, (state, action) => {\n      state.loading = false;\n      state.appErr = action?.payload?.msg;\n      state.serverErr = action?.error?.msg;\n    });\n\n    //   fetch all Expense\n    builder.addCase(fetchAllIncomeAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchAllIncomeAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.incomeList = action?.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(fetchAllIncomeAction.rejected, (state, action) => {\n      state.loading = false;\n      state.appErr = action?.payload?.msg;\n      state.serverErr = action?.error?.msg;\n    });\n\n    //   update Expense\n    builder.addCase(updateIncomeAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(updateIncomeAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.incomeUpdated = action?.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(updateIncomeAction.rejected, (state, action) => {\n      state.loading = false;\n      state.appErr = action?.payload?.msg;\n      state.serverErr = action?.error?.msg;\n    });\n  },\n});\n\nexport default incomeSlices.reducer;\n"]},"metadata":{},"sourceType":"module"}