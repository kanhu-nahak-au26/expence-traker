{"ast":null,"code":"import _slicedToArray from\"/home/admin1/attainu/attainu/kanhu-nahak-au26/monthly-tests/Month-07/Full-Stack/expense-tracker /client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/admin1/attainu/attainu/kanhu-nahak-au26/monthly-tests/Month-07/Full-Stack/expense-tracker /client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{useState}from\"react\";import{css}from\"@emotion/react\";import ClipLoader from\"react-spinners/ClipLoader\";// Can be a string as well. Need to ensure each key-value pair ends with ;\nimport{jsx as _jsx}from\"react/jsx-runtime\";var override=css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: block;\\n  margin: 0 auto;\\n  border-color: red;\\n\"])));function LoadingComponent(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(\"#ffffff\"),_useState4=_slicedToArray(_useState3,2),color=_useState4[0],setColor=_useState4[1];return/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:\"100vh\",backgroundColor:\"black\"},children:/*#__PURE__*/_jsx(ClipLoader,{color:color,loading:loading,css:override,size:150})});}export default LoadingComponent;","map":{"version":3,"sources":["/home/admin1/attainu/attainu/kanhu-nahak-au26/monthly-tests/Month-07/Full-Stack/expense-tracker /client/src/components/Loading.js"],"names":["useState","css","ClipLoader","override","LoadingComponent","loading","setLoading","color","setColor","display","justifyContent","alignItems","height","backgroundColor"],"mappings":"geAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,GAAT,KAAoB,gBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CAEA;2CACA,GAAMC,CAAAA,QAAQ,CAAGF,GAAH,+HAAd,CAMA,QAASG,CAAAA,gBAAT,EAA4B,eACEJ,QAAQ,CAAC,IAAD,CADV,wCACrBK,OADqB,eACZC,UADY,8BAEFN,QAAQ,CAAC,SAAD,CAFN,yCAErBO,KAFqB,eAEdC,QAFc,eAI1B,mBACE,YACE,KAAK,CAAE,CACLC,OAAO,CAAE,MADJ,CAELC,cAAc,CAAE,QAFX,CAGLC,UAAU,CAAE,QAHP,CAILC,MAAM,CAAE,OAJH,CAKLC,eAAe,CAAE,OALZ,CADT,uBASE,KAAC,UAAD,EAAY,KAAK,CAAEN,KAAnB,CAA0B,OAAO,CAAEF,OAAnC,CAA4C,GAAG,CAAEF,QAAjD,CAA2D,IAAI,CAAE,GAAjE,EATF,EADF,CAaD,CAED,cAAeC,CAAAA,gBAAf","sourcesContent":["import { useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nfunction LoadingComponent() {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ffffff\");\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        backgroundColor: \"black\",\n      }}\n    >\n      <ClipLoader color={color} loading={loading} css={override} size={150} />\n    </div>\n  );\n}\n\nexport default LoadingComponent;\n"]},"metadata":{},"sourceType":"module"}