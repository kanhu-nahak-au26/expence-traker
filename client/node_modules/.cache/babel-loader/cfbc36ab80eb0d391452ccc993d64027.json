{"ast":null,"code":"import { createAsyncThunk, createSlice, createAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\"; //fetch all expenses\n\nexport const fetchAccountStatsAction = createAsyncThunk(\"account/fetch\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  var _getState, _getState$users;\n\n  const user = (_getState = getState()) === null || _getState === void 0 ? void 0 : (_getState$users = _getState.users) === null || _getState$users === void 0 ? void 0 : _getState$users.userAuth;\n  const config = {\n    headers: {\n      authorization: `Bearer ${user === null || user === void 0 ? void 0 : user.token}`\n    }\n  };\n\n  try {\n    const {\n      data\n    } = await axios.get(`${baseURL}/accounts-statistics`, config);\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}); //slices\n\nconst expenseSlices = createSlice({\n  name: \"account\",\n  initialState: {},\n  extraReducers: builder => {\n    //   fetch all Expense\n    builder.addCase(fetchAccountStatsAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchAccountStatsAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.accountDetails = action === null || action === void 0 ? void 0 : action.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(fetchAccountStatsAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.msg;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.msg;\n    });\n  }\n});\nexport default expenseSlices.reducer;","map":{"version":3,"sources":["/home/admin1/attainu/attainu/kanhu-nahak-au26/monthly-tests/Month-07/Full-Stack/expense-tracker /client/src/redux/slices/accountsStats/accountStatSlices.js"],"names":["createAsyncThunk","createSlice","createAction","axios","baseURL","fetchAccountStatsAction","payload","rejectWithValue","getState","dispatch","user","users","userAuth","config","headers","authorization","token","data","get","error","response","expenseSlices","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","accountDetails","appErr","undefined","serverErr","rejected","msg","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,EAAwCC,YAAxC,QAA4D,kBAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CAEA;;AACA,OAAO,MAAMC,uBAAuB,GAAGL,gBAAgB,CACrD,eADqD,EAErD,OAAOM,OAAP,EAAgB;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAhB,KAA4D;AAAA;;AAC1D,QAAMC,IAAI,gBAAGF,QAAQ,EAAX,iEAAG,UAAYG,KAAf,oDAAG,gBAAmBC,QAAhC;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASL,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEM,KAAM;AAD9B;AADI,GAAf;;AAKA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,GAAN,CACpB,GAAEd,OAAQ,sBADU,EAErBS,MAFqB,CAAvB;AAIA,WAAOI,IAAP;AACD,GAND,CAME,OAAOE,KAAP,EAAc;AAAA;;AACd,QAAI,EAACA,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEC,QAAR,CAAJ,EAAsB;AACpB,YAAMD,KAAN;AACD;;AACD,WAAOZ,eAAe,CAACY,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEC,QAAR,oDAAC,gBAAiBH,IAAlB,CAAtB;AACD;AACF,CArBoD,CAAhD,C,CAwBP;;AAEA,MAAMI,aAAa,GAAGpB,WAAW,CAAC;AAChCqB,EAAAA,IAAI,EAAE,SAD0B;AAEhCC,EAAAA,YAAY,EAAE,EAFkB;AAGhCC,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxB;AACAA,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,uBAAuB,CAACsB,OAAxC,EAAiD,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClED,MAAAA,KAAK,CAACE,OAAN,GAAgB,IAAhB;AACD,KAFD;AAGAL,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,uBAAuB,CAAC0B,SAAxC,EAAmD,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACpED,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACAF,MAAAA,KAAK,CAACI,cAAN,GAAuBH,MAAvB,aAAuBA,MAAvB,uBAAuBA,MAAM,CAAEvB,OAA/B;AACAsB,MAAAA,KAAK,CAACK,MAAN,GAAeC,SAAf;AACAN,MAAAA,KAAK,CAACO,SAAN,GAAkBD,SAAlB;AACD,KALD;AAMAT,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,uBAAuB,CAAC+B,QAAxC,EAAkD,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAAA;;AACnED,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACAF,MAAAA,KAAK,CAACK,MAAN,GAAeJ,MAAf,aAAeA,MAAf,0CAAeA,MAAM,CAAEvB,OAAvB,oDAAe,gBAAiB+B,GAAhC;AACAT,MAAAA,KAAK,CAACO,SAAN,GAAkBN,MAAlB,aAAkBA,MAAlB,wCAAkBA,MAAM,CAAEV,KAA1B,kDAAkB,cAAekB,GAAjC;AACD,KAJD;AAKD;AAnB+B,CAAD,CAAjC;AAsBA,eAAehB,aAAa,CAACiB,OAA7B","sourcesContent":["import { createAsyncThunk, createSlice, createAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\";\n\n//fetch all expenses\nexport const fetchAccountStatsAction = createAsyncThunk(\n  \"account/fetch\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    const user = getState()?.users?.userAuth;\n    const config = {\n      headers: {\n        authorization: `Bearer ${user?.token}`,\n      },\n    };\n    try {\n      const { data } = await axios.get(\n        `${baseURL}/accounts-statistics`,\n        config\n      );\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//slices\n\nconst expenseSlices = createSlice({\n  name: \"account\",\n  initialState: {},\n  extraReducers: builder => {\n    //   fetch all Expense\n    builder.addCase(fetchAccountStatsAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchAccountStatsAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.accountDetails = action?.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(fetchAccountStatsAction.rejected, (state, action) => {\n      state.loading = false;\n      state.appErr = action?.payload?.msg;\n      state.serverErr = action?.error?.msg;\n    });\n  },\n});\n\nexport default expenseSlices.reducer;\n"]},"metadata":{},"sourceType":"module"}