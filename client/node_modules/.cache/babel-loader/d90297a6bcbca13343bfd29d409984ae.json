{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\"; //Login action\n\nexport const loginUserAction = createAsyncThunk(\"user/login\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    //make http call here\n    const {\n      data\n    } = await axios.post(`${baseURL}/users/login`, payload, config); //Save user into localstorage\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}); //register action\n\nexport const registerUserAction = createAsyncThunk(\"user/register\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    //make http call here\n    const {\n      data\n    } = await axios.post(`${baseURL}/users/register`, payload, config);\n    return data;\n  } catch (error) {\n    var _error$response2;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n}); //slices\n//Get user from local storage and place it inside our store;\n\nconst userLoginFromStorage = loca;\nconst usersSlices = createSlice({\n  name: \"users\",\n  initialState: {\n    user: \"Emmanuel\"\n  },\n  extraReducers: builder => {\n    //   Login action\n    builder.addCase(loginUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle success state\n\n    builder.addCase(loginUserAction.fulfilled, (state, action) => {\n      state.userAuth = action === null || action === void 0 ? void 0 : action.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle rejected state\n\n    builder.addCase(loginUserAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n\n      console.log(action);\n      state.userLoading = false;\n      state.userAppErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.msg;\n      state.userServerErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.msg;\n    }); //   Register\n\n    builder.addCase(registerUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle success state\n\n    builder.addCase(registerUserAction.fulfilled, (state, action) => {\n      state.userAuth = action === null || action === void 0 ? void 0 : action.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle rejected state\n\n    builder.addCase(registerUserAction.rejected, (state, action) => {\n      var _action$payload2, _action$error2;\n\n      state.userLoading = false;\n      state.userAppErr = action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.msg;\n      state.userServerErr = action === null || action === void 0 ? void 0 : (_action$error2 = action.error) === null || _action$error2 === void 0 ? void 0 : _action$error2.msg;\n    });\n  }\n});\nexport default usersSlices.reducer;","map":{"version":3,"sources":["/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker/client/src/redux/slices/users/usersSlices.js"],"names":["createAsyncThunk","createSlice","axios","baseURL","loginUserAction","payload","rejectWithValue","getState","dispatch","config","headers","data","post","localStorage","setItem","JSON","stringify","error","response","registerUserAction","userLoginFromStorage","loca","usersSlices","name","initialState","user","extraReducers","builder","addCase","pending","state","action","userLoading","userAppErr","undefined","userServerErr","fulfilled","userAuth","rejected","console","log","msg","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\";\n\n//Login action\nexport const loginUserAction = createAsyncThunk(\n  \"user/login\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      //make http call here\n      const { data } = await axios.post(\n        `${baseURL}/users/login`,\n        payload,\n        config\n      );\n      //Save user into localstorage\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//register action\nexport const registerUserAction = createAsyncThunk(\n  \"user/register\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      //make http call here\n      const { data } = await axios.post(\n        `${baseURL}/users/register`,\n        payload,\n        config\n      );\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//slices\n\n//Get user from local storage and place it inside our store;\n\nconst userLoginFromStorage = loca\nconst usersSlices = createSlice({\n  name: \"users\",\n  initialState: {\n    user: \"Emmanuel\",\n  },\n  extraReducers: builder => {\n    //   Login action\n    builder.addCase(loginUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    });\n    //handle success state\n    builder.addCase(loginUserAction.fulfilled, (state, action) => {\n      state.userAuth = action?.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    });\n    //handle rejected state\n    builder.addCase(loginUserAction.rejected, (state, action) => {\n      console.log(action);\n      state.userLoading = false;\n      state.userAppErr = action?.payload?.msg;\n      state.userServerErr = action?.error?.msg;\n    });\n    //   Register\n    builder.addCase(registerUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    });\n    //handle success state\n    builder.addCase(registerUserAction.fulfilled, (state, action) => {\n      state.userAuth = action?.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    });\n    //handle rejected state\n    builder.addCase(registerUserAction.rejected, (state, action) => {\n      state.userLoading = false;\n      state.userAppErr = action?.payload?.msg;\n      state.userServerErr = action?.error?.msg;\n    });\n  },\n});\n\nexport default usersSlices.reducer;\n"]},"metadata":{},"sourceType":"module"}