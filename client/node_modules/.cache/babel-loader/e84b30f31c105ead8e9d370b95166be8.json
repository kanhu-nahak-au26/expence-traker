{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\"; //register action\n\nexport const createExpAction = createAsyncThunk(\"expense/create\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  var _getState, _getState$users;\n\n  //get user token from store\n  const userToken = (_getState = getState()) === null || _getState === void 0 ? void 0 : (_getState$users = _getState.users) === null || _getState$users === void 0 ? void 0 : _getState$users.userAuth;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${userToken}`\n    }\n  };\n\n  try {\n    //make http call here\n    const {\n      data\n    } = await axios.post(`${baseURL}/expenses`, payload, config);\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n});\nconst expenseSlices = createSlice({\n  name: \"expenses\",\n  initialState: {\n    expense: [\"43\", \"53\"]\n  },\n  extraReducers: builder => {\n    //   Create Expense\n    builder.addCase(createExpAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(createExpAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.expenseCreated = action === null || action === void 0 ? void 0 : action.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(createExpAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.msg;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.msg;\n    });\n  }\n});\nexport default expenseSlices.reducer;","map":{"version":3,"sources":["/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker/client/src/redux/slices/expenses/expensesSlices.js"],"names":["createAsyncThunk","createSlice","axios","baseURL","createExpAction","payload","rejectWithValue","getState","dispatch","userToken","users","userAuth","config","headers","Authorization","data","post","error","response","expenseSlices","name","initialState","expense","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","expenseCreated","appErr","undefined","serverErr","rejected","msg","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAGJ,gBAAgB,CAC7C,gBAD6C,EAE7C,OAAOK,OAAP,EAAgB;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAhB,KAA4D;AAAA;;AAC1D;AACA,QAAMC,SAAS,gBAAGF,QAAQ,EAAX,iEAAG,UAAYG,KAAf,oDAAG,gBAAmBC,QAArC;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASL,SAAU;AAF5B;AADI,GAAf;;AAMA,MAAI;AACF;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,IAAN,CAAY,GAAEb,OAAQ,WAAtB,EAAkCE,OAAlC,EAA2CO,MAA3C,CAAvB;AACA,WAAOG,IAAP;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AAAA;;AACd,QAAI,EAACA,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEC,QAAR,CAAJ,EAAsB;AACpB,YAAMD,KAAN;AACD;;AACD,WAAOX,eAAe,CAACW,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEC,QAAR,oDAAC,gBAAiBH,IAAlB,CAAtB;AACD;AACF,CArB4C,CAAxC;AAwBP,MAAMI,aAAa,GAAGlB,WAAW,CAAC;AAChCmB,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAAX,GAFkB;AAGhCC,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxB;AACAA,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,eAAe,CAACsB,OAAhC,EAAyC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1DD,MAAAA,KAAK,CAACE,OAAN,GAAgB,IAAhB;AACD,KAFD;AAGAL,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,eAAe,CAAC0B,SAAhC,EAA2C,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC5DD,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACAF,MAAAA,KAAK,CAACI,cAAN,GAAuBH,MAAvB,aAAuBA,MAAvB,uBAAuBA,MAAM,CAAEvB,OAA/B;AACAsB,MAAAA,KAAK,CAACK,MAAN,GAAeC,SAAf;AACAN,MAAAA,KAAK,CAACO,SAAN,GAAkBD,SAAlB;AACD,KALD;AAMAT,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,eAAe,CAAC+B,QAAhC,EAA0C,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAAA;;AAC3DD,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACAF,MAAAA,KAAK,CAACK,MAAN,GAAeJ,MAAf,aAAeA,MAAf,0CAAeA,MAAM,CAAEvB,OAAvB,oDAAe,gBAAiB+B,GAAhC;AACAT,MAAAA,KAAK,CAACO,SAAN,GAAkBN,MAAlB,aAAkBA,MAAlB,wCAAkBA,MAAM,CAAEX,KAA1B,kDAAkB,cAAemB,GAAjC;AACD,KAJD;AAKD;AAnB+B,CAAD,CAAjC;AAsBA,eAAejB,aAAa,CAACkB,OAA7B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\";\n\n//register action\nexport const createExpAction = createAsyncThunk(\n  \"expense/create\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    //get user token from store\n    const userToken = getState()?.users?.userAuth;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userToken}`,\n      },\n    };\n    try {\n      //make http call here\n      const { data } = await axios.post(`${baseURL}/expenses`, payload, config);\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\nconst expenseSlices = createSlice({\n  name: \"expenses\",\n  initialState: { expense: [\"43\", \"53\"] },\n  extraReducers: builder => {\n    //   Create Expense\n    builder.addCase(createExpAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(createExpAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.expenseCreated = action?.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(createExpAction.rejected, (state, action) => {\n      state.loading = false;\n      state.appErr = action?.payload?.msg;\n      state.serverErr = action?.error?.msg;\n    });\n  },\n});\n\nexport default expenseSlices.reducer;\n"]},"metadata":{},"sourceType":"module"}