{"ast":null,"code":"import _toConsumableArray from\"/home/admin1/100_JS_project/expence/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";//total, min, max, avg\nvar calcTransaction=function calcTransaction(arr){var tranArr=arr===null||arr===void 0?void 0:arr.map(function(data){return data===null||data===void 0?void 0:data.amount;});//sum\nvar sumTotal=arr===null||arr===void 0?void 0:arr.map(function(data){return data===null||data===void 0?void 0:data.amount;}).reduce(function(acc,curr){return Number(acc)+Number(curr);},0);var avg=sumTotal/2;var min=Math.min.apply(Math,_toConsumableArray(tranArr));var max=Math.max.apply(Math,_toConsumableArray(tranArr));console.log(avg,min,max,sumTotal);return{sumTotal:sumTotal,avg:avg,min:min,max:max};};export default calcTransaction;","map":{"version":3,"sources":["/home/admin1/100_JS_project/expence/client/src/utils/accountStatistics.js"],"names":["calcTransaction","arr","tranArr","map","data","amount","sumTotal","reduce","acc","curr","Number","avg","min","Math","max","console","log"],"mappings":"yKAAA;AACA,GAAMA,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,GAAG,CAAI,CAC7B,GAAMC,CAAAA,OAAO,CAAGD,GAAH,SAAGA,GAAH,iBAAGA,GAAG,CAAEE,GAAL,CAAS,SAAAC,IAAI,QAAIA,CAAAA,IAAJ,SAAIA,IAAJ,iBAAIA,IAAI,CAAEC,MAAV,EAAb,CAAhB,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAGL,GAAH,SAAGA,GAAH,iBAAGA,GAAG,CAChBE,GADa,CACT,SAAAC,IAAI,QAAIA,CAAAA,IAAJ,SAAIA,IAAJ,iBAAIA,IAAI,CAAEC,MAAV,EADK,EAEdE,MAFc,CAEP,SAACC,GAAD,CAAMC,IAAN,CAAe,CACrB,MAAOC,CAAAA,MAAM,CAACF,GAAD,CAAN,CAAcE,MAAM,CAACD,IAAD,CAA3B,CACD,CAJc,CAIZ,CAJY,CAAjB,CAMA,GAAME,CAAAA,GAAG,CAAGL,QAAQ,CAAG,CAAvB,CACA,GAAMM,CAAAA,GAAG,CAAGC,IAAI,CAACD,GAAL,OAAAC,IAAI,oBAAQX,OAAR,EAAhB,CACA,GAAMY,CAAAA,GAAG,CAAGD,IAAI,CAACC,GAAL,OAAAD,IAAI,oBAAQX,OAAR,EAAhB,CACAa,OAAO,CAACC,GAAR,CAAYL,GAAZ,CAAiBC,GAAjB,CAAsBE,GAAtB,CAA2BR,QAA3B,EACA,MAAO,CACLA,QAAQ,CAARA,QADK,CAELK,GAAG,CAAHA,GAFK,CAGLC,GAAG,CAAHA,GAHK,CAILE,GAAG,CAAHA,GAJK,CAAP,CAMD,CApBD,CAsBA,cAAed,CAAAA,eAAf","sourcesContent":["//total, min, max, avg\nconst calcTransaction = arr => {\n  const tranArr = arr?.map(data => data?.amount);\n\n  //sum\n  const sumTotal = arr\n    ?.map(data => data?.amount)\n    .reduce((acc, curr) => {\n      return Number(acc) + Number(curr);\n    }, 0);\n\n  const avg = sumTotal / 2;\n  const min = Math.min(...tranArr);\n  const max = Math.max(...tranArr);\n  console.log(avg, min, max, sumTotal);\n  return {\n    sumTotal,\n    avg,\n    min,\n    max,\n  };\n};\n\nexport default calcTransaction;\n"]},"metadata":{},"sourceType":"module"}